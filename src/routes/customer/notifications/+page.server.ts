import type { PageServerLoad } from './$types.js';
import PocketBase from 'pocketbase';
import { PUBLIC_POCKETBASE_URL } from '$env/static/public';

const pb = new PocketBase(PUBLIC_POCKETBASE_URL);

export const load: PageServerLoad = async ({ cookies }) => {
	try {
		// ‡πÉ‡∏ä‡πâ hardcode user ID ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ
		const userId = "5v70v6p91pfakvb";
		
		console.log('üîî Loading notifications for User ID:', userId);
		
		// ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å Order/Payment ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö user
		const notifications = [];
		
		// 1. ‡∏î‡∏∂‡∏á Payment records ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
		const paymentRecords = await pb.collection('Payment').getFullList({
			filter: `User_ID = "${userId}"`,
			sort: '-created',
			limit: 10
		});
		
		// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å Payment records
		for (const payment of paymentRecords) {
			notifications.push({
				id: payment.id,
				type: 'order',
				title: '‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
				message: `‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #${payment.id.slice(-8)} ${payment.Status === 'Success' ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß' : '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'}`,
				status: payment.Status === 'Success' ? 'success' : 'pending',
				amount: payment.Total_Price || 0,
				time: payment.created,
				icon: payment.Status === 'Success' ? '‚úÖ' : '‚è≥',
				read: false
			});
		}
		
		// 2. ‡∏î‡∏∂‡∏á Point records ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
		const pointRecords = await pb.collection('Point').getFullList({
			filter: `User_ID = "${userId}"`,  
			sort: '-created',
			limit: 5
		});
		
		// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å Point records
		for (const point of pointRecords) {
			notifications.push({
				id: `point_${point.id}`,
				type: 'point',
				title: 'SCQ Point',
				message: `‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ ${point.Point} ‡πÅ‡∏ï‡πâ‡∏°`,
				status: 'info',
				amount: point.Point,
				time: point.created,
				icon: 'üíé',
				read: false
			});
		}
		
		// ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
		notifications.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());
		
		console.log('üîî Found notifications:', notifications.length);
		
		return {
			notifications: notifications.slice(0, 20), // ‡∏à‡∏≥‡∏Å‡∏±‡∏î 20 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
			totalCount: notifications.length
		};
		
	} catch (error) {
		console.error('‚ùå Error loading notifications:', error);
		
		// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• fallback
		return {
			notifications: [
				{
					id: 'welcome',
					type: 'system',
					title: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö',
					message: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà SCQ! ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢',
					status: 'info',
					time: new Date().toISOString(),
					icon: 'üéâ',
					read: false
				}
			],
			totalCount: 1
		};
	}
};